DROP TABLE IF EXISTS BOOKINGS;
DROP TABLE IF EXISTS COMMENTS;
DROP TABLE IF EXISTS ITEMS;
DROP TABLE IF EXISTS REQUESTS;
DROP TABLE IF EXISTS USERS;

CREATE TABLE IF NOT EXISTS USERS
(
    id    INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(16)        NOT NULL,
    email VARCHAR(32) UNIQUE NOT NULL
);


CREATE TABLE IF NOT EXISTS REQUESTS
(
    id           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description  VARCHAR(64) NOT NULL,
    requestor_id INT         NOT NULL,
    FOREIGN KEY (requestor_id) REFERENCES USERS (id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS items
(
    id           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(32) NOT NULL,
    description  VARCHAR(64) NOT NULL,
    is_available BOOLEAN     NOT NULL,
    owner_id     INT         NOT NULL,
    request_id   INT,
    last_booking TIMESTAMP,
    next_booking TIMESTAMP,
    FOREIGN KEY (owner_id) REFERENCES USERS (id) ON DELETE CASCADE,
    FOREIGN KEY (request_id) REFERENCES REQUESTS (id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS bookings
(
    id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date TIMESTAMP WITHOUT TIME ZONE,
    end_date   TIMESTAMP WITHOUT TIME ZONE,
    item_id    INT,
    booker_id  INT,
    status     VARCHAR(16),
    FOREIGN KEY (item_id) REFERENCES ITEMS (id) ON DELETE CASCADE,
    FOREIGN KEY (booker_id) REFERENCES USERS (id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS comments
(
    id        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text      VARCHAR(2048) NOT NULL,
    item_id   INT,
    author_id INT,
    created   TIMESTAMP,
    FOREIGN KEY (item_id) REFERENCES ITEMS (id) ON DELETE CASCADE,
    FOREIGN KEY (author_id) REFERENCES USERS (id) ON DELETE CASCADE
);